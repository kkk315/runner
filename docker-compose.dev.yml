version: '3.8'

services:
  frontend:
    image: node:24.4.1-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    ports:
      - "5173:5173"
    networks:
      - frontend-net
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app

  backend:
    image: python:3.12-slim
    working_dir: /app
    command: sh -c "pip install --no-cache-dir -r requirements.txt && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    networks:
      - frontend-net
      - backend-db-net
    depends_on:
      - db
    environment:
      - PYTHONUNBUFFERED=1
      - DBUSER_FILE=/run/secrets/DBUSER
      - DBPASSWORD_FILE=/run/secrets/DBPASSWORD
      - DBNAME_FILE=/run/secrets/DBNAME
      - STACK_NAME=runner-dev
    secrets:
      - DBUSER
      - DBPASSWORD
      - DBNAME
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres:16.2
    restart: always
    environment:
      POSTGRES_DB_FILE: /run/secrets/DBNAME
      POSTGRES_USER_FILE: /run/secrets/DBUSER
      POSTGRES_PASSWORD_FILE: /run/secrets/DBPASSWORD
    networks:
      - backend-db-net
    secrets:
      - DBUSER
      - DBPASSWORD
      - DBNAME
    volumes:
      - db-data:/var/lib/postgresql/data-dev

secrets:
  DBUSER:
    external: true
  DBPASSWORD:
    external: true
  DBNAME:
    external: true

networks:
  frontend-net:
    driver: overlay
  backend-db-net:
    driver: overlay
    attachable: true

volumes:
  db-data:
